# -*- coding: utf-8 -*-
"""1992. Find All Groups of Farmland.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Sb1VF4vV9uTMPh4NhbL5sV074kBqKVRM
"""

class Solution:
    def findFarmland(self, land: list[list[int]]) -> list[list[int]]:
        def dfs(r, c):
            nonlocal top, left, bottom, right
            if r < 0 or r >= m or c < 0 or c >= n or land[r][c] == 0:
                return

            top = min(top, r)
            left = min(left, c)
            bottom = max(bottom, r)
            right = max(right, c)

            land[r][c] = 0

            for dr, dc in directions:
                dfs(r + dr, c + dc)

        m, n = len(land), len(land[0])
        directions = [(0, 1), (1, 0), (0, -1), (-1, 0)]
        result = []

        for i in range(m):
            for j in range(n):
                if land[i][j] == 1:
                    top, left = i, j
                    bottom, right = i, j
                    dfs(i, j)
                    result.append([top, left, bottom, right])

        return result