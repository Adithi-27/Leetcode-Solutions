# -*- coding: utf-8 -*-
"""300. Longest Increasing Subsequence.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q3Zyb5dwfAIkjRgnij_HIuxMRMx3Nh8G
"""

class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        LIS = [1] * len(nums)

        for i in range(len(nums) -1, -1, -1):
            for j in range(i + 1, len(nums)):
                if nums[i] < nums[j]:
                    LIS[i] = max(LIS[i], 1 + LIS[j])
        return max(LIS)